---
import Base from '@/layouts/Base.astro'
import { Icon } from 'astro-icon/components'

const articles = await Promise.all(
    Object.entries(import.meta.glob('@/assets/news/*.md')).map(([name, article]) => article()),
)

// @ts-ignore
articles.sort((a, b) => b.frontmatter.date.localeCompare(a.frontmatter.date))

for (const article of articles) {
    // @ts-ignore
    article.frontmatter.id = article.file.split('/').pop().split('.')[0]
}
---

<Base>
    <section id="news">
        <div class="news-list">
            <div class="wide">
                <h1>News</h1>
            </div>
            {
                // @ts-ignore
                articles.map(({ Content, frontmatter }, i) => (
                    <div
                        class="news-item"
                        data-news-id={frontmatter.id}
                        style={{
                            '--news-color': `hsl(${Math.random() * 360}, 100%, 50%)`,
                        }}
                    >
                        <div class="title">
                            <span>{frontmatter.title}</span>
                            <div class="actions">
                                <input
                                    type="checkbox"
                                    class="news-item-trigger hide"
                                    id={`news-${i + 1}`}
                                    autocomplete="off"
                                />
                                <button class="news-share-button flat square mobile-only">
                                    <Icon class="news-item-expanded" name="material-symbols:share" />
                                </button>
                                <label for={`news-${i + 1}`} class="news-share-button-close button flat square">
                                    <Icon class="news-item-not-expanded" name="material-symbols:open-in-full-rounded" />
                                    <Icon class="news-item-expanded" name="material-symbols:close" />
                                </label>
                            </div>
                        </div>
                        <div class="content">
                            <div class="timestamp">
                                {new Date(frontmatter.date).toLocaleDateString('en-GB', {
                                    month: 'long',
                                    day: 'numeric',
                                })}
                            </div>
                            <div class="text">
                                <Content />
                            </div>
                        </div>
                    </div>
                ))
            }
        </div>
    </section>
    <script>
        // ?item=<article.id>
        const urlParams = new URLSearchParams(window.location.search)
        const item = urlParams.get('item')
        if (item) {
            const newsItem = document.querySelector(`[data-news-id="${item}"] .news-item-trigger`)
            if (newsItem) {
                //@ts-ignore
                newsItem.checked = true
            }
        }

        document.querySelectorAll('.news-share-button').forEach($button => {
            $button.addEventListener('click', async e => {
                const newsItem = $button.closest('.news-item')
                // @ts-ignore
                const newsId = newsItem.getAttribute('data-news-id')
                const url = new URL(window.location.href)
                // @ts-ignore
                url.searchParams.set('item', newsId)

                if (navigator.share) {
                    navigator.share({
                        title: 'DevFest Pisa 2025',
                        text: 'Check out this news article!',
                        url: url.toString(),
                    })
                }
            })
        })

        document.querySelectorAll('.news-share-button-close').forEach($button => {
            $button.addEventListener('click', async e => {
                const url = new URL(window.location.href)
                url.searchParams.delete('item')

                window.history.pushState({}, '', url.toString())
            })
        })

        // overkill ma fa la cosa giusta in teoria
        window.addEventListener('popstate', () => {
            const url = new URL(window.location.href)
            const item = url.searchParams.get('item')
            if (item) {
                const newsItem = document.querySelector(`[data-news-id="${item}"] .news-item-trigger`)
                if (newsItem) {
                    //@ts-ignore
                    newsItem.checked = true
                }
            }
        })
    </script>
</Base>
