---
import Base from '@/layouts/Base.astro'

import towerImageSvg from '@/assets/tower_pisa_beta.svg'
import KatexSSR from '@/components/astro/KatexSSR.astro'
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'

import sponsors from '@/sponsors.yaml'

// const galleryCollage = await Astro.glob('@/assets/gallery/*.jpg')

// @ts-ignore
const galleryCollage: { default: { src: string } }[] = await Promise.all(
    Object.values(import.meta.glob('/src/assets/gallery/*.jpg')).map(module => module())
)

const galleryCollageEager: { default: ImageMetadata }[] = await Promise.all(
    Object.values(import.meta.glob<{ default: ImageMetadata }>('/src/assets/gallery/*.jpg')).map(module => module())
)
console.log(galleryCollage)

// Calculate total grid spans for each row
const getGridCols = (images: typeof galleryCollage) => {
    return images.reduce((acc, module) => {
        const src = module.default.src
        const filename = src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)

        if (!filename) {
            throw new Error('Invalid filename')
        }

        const [rows, cols] = filename.includes('@')
            ? (filename
                  .split('@')
                  .at(-1)
                  ?.split('x')
                  .map((s: string) => parseInt(s)) ?? [1, 1])
            : [1, 1]

        return acc + cols
    }, 0)
}

const totalCols = getGridCols(galleryCollage)

// Sponsors

// @ts-ignore
const sponsorLogos: Record<string, ImageMetadata> = Object.fromEntries(
    (
        await Promise.all(
            Object.values(import.meta.glob<{ default: ImageMetadata }>('/src/assets/sponsors/*')).map(module =>
                module()
            )
        )
    ).map((module: { default: ImageMetadata }) => {
        const src = module.default.src
        const filename = src.split('/').at(-1)!.split('?').at(0)!

        if (!filename) {
            throw new Error('Invalid filename')
        }

        return [filename, module.default]
    })
)

console.log(sponsorLogos)
---

<Base>
    <section id="hero">
        <div class="h-stack">
            <div class="hero-content v-stack">
                <div class="text">
                    <h1>DevFest Pisa 2025</h1>
                    <h3>
                        12 April 2025 @ <span class="blur-text">Nice try</span>
                    </h3>
                </div>
                <div class="text">
                    <p>Together we grow, together we build! üå±</p>
                </div>
                <a class="primary large" href="#cfp" role="button">Call for Papers</a>
            </div>
            <img class="hero-image" src={towerImageSvg.src} alt="Leaning Tower of Pisa" />
        </div>
    </section>
    <section id="cfp">
        <div class="text">
            <h2>Call for Papers</h2>
        </div>
        <div class="card large">
            <div class="text">
                <p>
                    Call For Paper is closing soon! üöÄ Don't miss this incredible opportunity to share your knowledge,
                    inspire others, and contribute to the growth of our amazing community! Whether you're an experienced
                    speaker or taking the stage for the first time, this is your chance to make an impact.
                </p>

                Submit your talk now and become a speaker! üé§‚ú®
            </div>
        </div>
        <a class="large" href="/cfp" role="button"> Submit your talk </a>
    </section>
</Base>
<section id="stats">
    <div class="stats-layouts">
        <div class="stats-card card large">
            <div class="text">
                <h2>DevFest Pisa 2025 is coming soon!</h2>
                <p>
                    After last year's success, GDG Pisa is happy to announce that DevFest Pisa is coming back in town
                    with new surprises!
                </p>
                You can enjoy a one-day conference all about AI, Web, Cloud and much more in the heart of Tuscany.
            </div>
            <p>
                Last year's conference was a blast! Check out the video recap and make sure you don't miss it next year!
            </p>
            <a class="large" href="https://youtu.be/v3nYSljL8P4" role="button"> DevFest Pisa 2024 Video Recap </a>
        </div>
        <div class="card large">
            <div class="v-stack center">
                <div class="text-large">500+</div>
                <div class="text text-center">Attendees</div>
            </div>
        </div>
        <div class="card large">
            <div class="v-stack center">
                <div class="text-large">30+</div>
                <div class="text text-center">Speakers</div>
            </div>
        </div>
        <div class="card large">
            <div class="v-stack center">
                <div class="text-large">5+</div>
                <div class="text text-center">Speakers' Nations</div>
            </div>
        </div>
        <div class="card large">
            <div class="v-stack center">
                <div class="text-large">
                    <KatexSSR formula="n" />+
                </div>
                <div class="text text-center">
                    After Party Beers <span class="text-emoji">üçª</span>
                </div>
            </div>
        </div>
    </div>
</section>

<section id="past-editions">
    <div class="text">
        <h3>New to DevFest Pisa? Check out our previous editions!</h3>
    </div>
    <div class="card-gallery">
        <div class="h-stack">
            <div class="card tight">
                <iframe
                    width="560"
                    height="315"
                    src="https://www.youtube.com/embed/v3nYSljL8P4"
                    title="YouTube video player"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    referrerpolicy="strict-origin-when-cross-origin"
                    allowfullscreen></iframe>
            </div>
            <div class="card tight">
                <iframe
                    width="560"
                    height="315"
                    src="https://www.youtube.com/embed/HOvwmfNEw1I"
                    title="YouTube video player"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    referrerpolicy="strict-origin-when-cross-origin"
                    allowfullscreen></iframe>
            </div>
            <div class="card tight">
                <iframe
                    width="560"
                    height="315"
                    src="https://www.youtube.com/embed/h5d-EOTWOOU"
                    title="YouTube video player"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    referrerpolicy="strict-origin-when-cross-origin"
                    allowfullscreen></iframe>
            </div>
            <div class="card tight">
                <iframe
                    width="560"
                    height="315"
                    src="https://www.youtube.com/embed/KKKoFXHC_zc"
                    title="YouTube video player"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    referrerpolicy="strict-origin-when-cross-origin"
                    allowfullscreen></iframe>
            </div>
        </div>
    </div>
</section>
<section id="gallery" class="tight">
    <div class="image-gallery">
        <div class="image-gallery-wrapper">
            {
                galleryCollage.slice(0, 10).map((module, i) => {
                    const src = module.default.src
                    const filename = src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)

                    if (!filename) {
                        throw new Error('Invalid filename')
                    }

                    const [rows, cols] = filename.includes('@')
                        ? (filename
                              .split('@')
                              .at(-1)
                              ?.split('x')
                              .map((s: string) => parseInt(s)) ?? [1, 1])
                        : [1, 1]

                    return <img src={src} alt={`gallery image ${i}`} style={`--rows: ${rows}; --cols: ${cols};`} />
                })
            }
        </div>
    </div>
</section>
<section class="photoContainer">
    {
        [0, 1].map(rowIndex => {
            const rowImages = [...galleryCollageEager, ...galleryCollageEager.slice(0, 5)]

            return (
                <div class="track" style={{ '--total-boxes': totalCols }}>
                    {rowImages.map((module, i) => {
                        const src = module.default.src
                        //const filename = src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)
                        const filename = module.default.src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)

                        if (!filename) {
                            throw new Error('Invalid filename')
                        }

                        const [rows, cols] = filename.includes('@')
                            ? (filename
                                  .split('@')
                                  .at(-1)
                                  ?.split('x')
                                  .map((s: string) => parseInt(s)) ?? [1, 1])
                            : [1, 1]

                        return (
                            <div class="box card" style={{ gridColumn: `span ${cols}` }}>
                                {/* <Image  class="boxImage" src={module.default} alt={`gallery image ${i}`} /> */}
                                <img class="boxImage" src={src} alt={`gallery image ${i}`} />
                            </div>
                        )
                    })}
                </div>
            )
        })
    }
</section>

<section id="sponsors">
    <div class="v-stack">
        <div class="text">
            <h2>Sponsors</h2>
        </div>

        {
            sponsors.main && (
                <>
                    <div class="text">
                        <h3 style="color: #444;">
                            <strong>Main Sponsor ‚ú®</strong>
                        </h3>
                    </div>
                    <div class="sponsor-list h-flex-wrap">
                        {sponsors.main.map(sponsor => {
                            return (
                                <div class="card">
                                    <img src={sponsorLogos[sponsor.logo].src} alt={sponsor.name} />
                                </div>
                            )
                        })}
                    </div>
                </>
            )
        }

        {
            sponsors.diamond && (
                <>
                    <div class="text">
                        <h3>
                            <span
                                class="text-custom"
                                style="background-image: linear-gradient(to right, hsl(300, 100%, 70%), hsl(189, 100%, 70%));"
                            >
                                <strong>Diamond</strong>
                            </span>
                            üíé
                        </h3>
                    </div>
                    <div class="sponsor-list h-flex-wrap">
                        {sponsors.diamond.map(sponsor => {
                            return (
                                <div class="card">
                                    <img src={sponsorLogos[sponsor.logo].src} alt={sponsor.name} />
                                </div>
                            )
                        })}
                    </div>
                </>
            )
        }

        {
            sponsors.platinum && (
                <>
                    <div class="text">
                        <h3
                            class="text-custom"
                            style="background-image: linear-gradient(to right, hsl(253, 100%, 71%), hsl(0, 0%, 59%));"
                        >
                            <strong>Platinum</strong>
                        </h3>
                    </div>
                    <div class="sponsor-list h-flex-wrap">
                        {sponsors.platinum.map(sponsor => {
                            return (
                                <div class="card">
                                    <img src={sponsorLogos[sponsor.logo].src} alt={sponsor.name} />
                                </div>
                            )
                        })}
                    </div>
                </>
            )
        }

        {
            sponsors.gold && (
                <>
                    <div class="text">
                        <h3
                            class="text-custom"
                            style="background-image: linear-gradient(to bottom right, hsl(42, 100%, 63%), hsl(42, 72%, 50%));"
                        >
                            <strong>Gold</strong>
                        </h3>
                    </div>
                    <div class="sponsor-list h-flex-wrap">
                        {sponsors.gold.map(sponsor => {
                            return (
                                <div class="card">
                                    <img src={sponsorLogos[sponsor.logo].src} alt={sponsor.name} />
                                </div>
                            )
                        })}
                    </div>
                </>
            )
        }

        {
            sponsors.silver && (
                <>
                    <div class="text">
                        <h3
                            class="text-custom"
                            style="background-image: linear-gradient(to bottom right, hsl(0, 0%, 59%), hsl(0, 0%, 31%));"
                        >
                            <strong>Silver</strong>
                        </h3>
                    </div>
                    {sponsors.silver.map(sponsor => {
                        return (
                            <div class="sponsor-list h-flex-wrap">
                                <div class="card">
                                    <img src={sponsorLogos[sponsor.logo].src} alt={sponsor.name} />
                                </div>
                            </div>
                        )
                    })}
                </>
            )
        }
    </div>
</section>
