---
import Base from '@/layouts/Base.astro'

import towerImageSvg from '@/assets/tower_pisa_beta.svg'
import KatexSSR from '@/components/astro/KatexSSR.astro'
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'

import sponsors, { type Sponsors } from '@/sponsors.yaml'
import { resolveImageModules } from '@/lib/util'

const galleryImageModules = await resolveImageModules(
    import.meta.glob<{ default: ImageMetadata }>('@/assets/gallery/*.jpg'),
)

// Calculate total grid spans for each row
const getGridCols = (images: typeof galleryImageModules) => {
    return images.reduce((acc, { default: { src } }) => {
        const filename = src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)
        if (!filename) {
            throw new Error('Invalid filename')
        }

        const [rows, cols] = filename.includes('@')
            ? (filename
                  .split('@')
                  .at(-1)
                  ?.split('x')
                  .map((s: string) => parseInt(s)) ?? [1, 1])
            : [1, 1]

        return acc + cols
    }, 0)
}

const totalCols = getGridCols(galleryImageModules)

// Sponsors

const sponsorsImageModules = await resolveImageModules(
    import.meta.glob<{ default: ImageMetadata }>('@/assets/sponsors/*'),
)

const sponsorLogos: Record<string, ImageMetadata> = Object.fromEntries(
    sponsorsImageModules.map(m => {
        const fileBasename = m.default.src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)
        if (!fileBasename) {
            throw new Error('Invalid filename')
        }

        return [fileBasename + '.svg', m.default]
    }),
)
---

<Base>
    <section id="hero">
        <div class="h-stack">
            <div class="hero-content v-stack">
                <div class="text">
                    <h1>DevFest Pisa 2025</h1>
                    <h3>
                        12 April 2025 @ <span class="blur-text">Nice try</span>
                    </h3>
                    <p>Together we grow, together we build! üå±</p>
                </div>
                <a class="primary large" href="#cfp" role="button">Call for Papers</a>
            </div>
            <img class="hero-image" src={towerImageSvg.src} alt="Leaning Tower of Pisa" />
        </div>
    </section>

    <section id="cfp">
        <h2>Call for Papers</h2>
        <div class="card large">
            <div class="text">
                <p>
                    Call For Paper is closing soon! üöÄ Don't miss this incredible opportunity to share your knowledge,
                    inspire others, and contribute to the growth of our amazing community!
                </p>
                <p>
                    Whether you're an experienced speaker or taking the stage for the first time, this is your chance to
                    make an impact. Submit your talk now and become a speaker! üé§‚ú®
                </p>
            </div>
            <a class="large" href="/cfp" role="button"> Submit your talk </a>
        </div>
    </section>

    <section id="stats">
        <div class="stats-layouts">
            <div class="stats-card card large">
                <div class="text">
                    <h2>DevFest Pisa 2025 is coming soon!</h2>
                    <p>
                        After last year's success, GDG Pisa is happy to announce that DevFest Pisa is coming back in
                        town with new surprises! You can enjoy a one-day conference all about AI, Web, Cloud and much
                        more in the heart of Tuscany.
                    </p>
                    <p>
                        Last year's conference was a blast! Check out the video recap and make sure you don't miss it
                        next year!
                    </p>
                </div>
                <a class="large" href="https://youtu.be/v3nYSljL8P4" role="button"> DevFest Pisa 2024 Video Recap </a>
            </div>
            <div class="card large">
                <div class="v-stack center">
                    <div class="text-large">500+</div>
                    <div class="text-center">Attendees</div>
                </div>
            </div>
            <div class="card large">
                <div class="v-stack center">
                    <div class="text-large">30+</div>
                    <div class="text-center">Speakers</div>
                </div>
            </div>
            <div class="card large">
                <div class="v-stack center">
                    <div class="text-large">5+</div>
                    <div class="text-center">Speakers' Nations</div>
                </div>
            </div>
            <div class="card large">
                <div class="v-stack center">
                    <div class="text-large">
                        <KatexSSR formula="n" />+
                    </div>
                    <div class="text-center">
                        After Party Beers <span class="text-emoji">üçª</span>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section id="past-editions">
        <h3>New to DevFest Pisa? Check out our previous editions!</h3>
        <div class="card-gallery">
            <div class="h-stack">
                <div class="card tight">
                    <iframe
                        width="560"
                        height="315"
                        src="https://www.youtube.com/embed/v3nYSljL8P4"
                        title="YouTube video player"
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                        referrerpolicy="strict-origin-when-cross-origin"
                        allowfullscreen></iframe>
                </div>
                <div class="card tight">
                    <iframe
                        width="560"
                        height="315"
                        src="https://www.youtube.com/embed/HOvwmfNEw1I"
                        title="YouTube video player"
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                        referrerpolicy="strict-origin-when-cross-origin"
                        allowfullscreen></iframe>
                </div>
                <div class="card tight">
                    <iframe
                        width="560"
                        height="315"
                        src="https://www.youtube.com/embed/h5d-EOTWOOU"
                        title="YouTube video player"
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                        referrerpolicy="strict-origin-when-cross-origin"
                        allowfullscreen></iframe>
                </div>
                <div class="card tight">
                    <iframe
                        width="560"
                        height="315"
                        src="https://www.youtube.com/embed/KKKoFXHC_zc"
                        title="YouTube video player"
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                        referrerpolicy="strict-origin-when-cross-origin"
                        allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </section>

    <!-- Static Photo Gallery Grid (desktop only) -->
    <section id="gallery" class="tight">
        <div class="image-gallery">
            <div class="image-gallery-wrapper">
                {
                    galleryImageModules.slice(0, 10).map(({ default: { src } }, i) => {
                        const filename = src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)
                        if (!filename) {
                            throw new Error('Invalid filename')
                        }

                        const [rows, cols] = filename.includes('@')
                            ? (filename
                                  .split('@')
                                  .at(-1)
                                  ?.split('x')
                                  .map((s: string) => parseInt(s)) ?? [1, 1])
                            : [1, 1]

                        return <img src={src} alt={`gallery image ${i}`} style={`--rows: ${rows}; --cols: ${cols};`} />
                    })
                }
            </div>
        </div>
    </section>

    <!-- Animated Photo Gallery (mobile only) -->
    <section class="photoContainer">
        {
            [0, 1].map(() => {
                const rowImages = [...galleryImageModules, ...galleryImageModules.slice(0, 5)]

                return (
                    <div class="track" style={{ '--total-boxes': totalCols }}>
                        {rowImages.map((module, i) => {
                            const filename = module.default.src.split('/').at(-1)!.split('?').at(0)!.split('.').at(0)
                            if (!filename) {
                                throw new Error('Invalid filename')
                            }

                            const [rows, cols] = filename.includes('@')
                                ? (filename
                                      .split('@')
                                      .at(-1)
                                      ?.split('x')
                                      .map((s: string) => parseInt(s)) ?? [1, 1])
                                : [1, 1]

                            return (
                                <div class="box card" style={{ gridColumn: `span ${cols}` }}>
                                    <Image class="boxImage" src={module.default} alt={`gallery image ${i}`} />
                                </div>
                            )
                        })}
                    </div>
                )
            })
        }
    </section>

    <section id="sponsors">
        <div class="v-stack">
            <h2>Sponsors</h2>
            {
                (Object.keys(sponsors) as (keyof Sponsors)[]).map(tier => {
                    // prettier-ignore
                    const titleStyle = {
                        main: 'color: #444;',
                        diamond: 'background-image: linear-gradient(to right, hsl(300, 100%, 70%), hsl(189, 100%, 70%));',
                        platinum: 'background-image: linear-gradient(to right, hsl(253, 100%, 71%), hsl(0, 0%, 59%));',
                        gold: 'background-image: linear-gradient(to bottom right, hsl(42, 100%, 63%), hsl(42, 72%, 50%));',
                        silver: 'background-image: linear-gradient(to bottom right, hsl(0, 0%, 59%), hsl(0, 0%, 31%));',
                    }

                    return (
                        sponsors[tier] && (
                            <>
                                <h3 class:list={{ 'text-custom': tier !== 'main' }} style={titleStyle[tier]}>
                                    <strong>{tier.charAt(0).toUpperCase() + tier.slice(1)}</strong>
                                </h3>
                                <div class="sponsor-list h-flex-wrap">
                                    {sponsors[tier].map(sponsor => {
                                        return (
                                            <a href={sponsor.url} target="_blank" rel="noopener noreferrer">
                                                <div class="card">
                                                    <img src={sponsorLogos[sponsor.logo].src} alt={sponsor.name} />
                                                </div>
                                            </a>
                                        )
                                    })}
                                </div>
                            </>
                        )
                    )
                })
            }
        </div>
    </section>
</Base>
